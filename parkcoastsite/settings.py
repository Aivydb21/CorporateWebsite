"""
Django settings for parkcoastsite project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import secrets
from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secrets.token_hex(32)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

SECURE_HSTS_SECONDS = 31536000

SECURE_HSTS_INCLUDE_SUBDOMAINS = True

SECURE_HSTS_PRELOAD = True

SECURE_SSL_REDIRECT = True

SESSION_COOKIE_SECURE = True

CSRF_COOKIE_SECURE = True

SECURE_BROWSER_XSS_FILTER = True


ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'jazzmin',  # pip install django-jazzmin
    'ckeditor',  # pip install django-ckeditor

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'company',
    'contact',
    'services',
    'mission',
    'ourclient',
    'corsheaders',

]

CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
CKEDITOR_UPLOAD_PATH = "ckeditor/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'height': 300,
        'width': 500,
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter',
             'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source']
        ]
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'parkcoastsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'parkcoastsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Park-Coast-Site",

    # Title on the brand, and login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Park-Coast-Site",

    # square logo to use for your site, must be present in static files, used for favicon and brand on top left
     "site_logo": "assets/Admin-panel-logo.png",

    # Welcome text on the login screen
    "welcome_sign": "Welcome to the Park-Coast-Site",

    # Copyright on the footer
    "copyright": "Park-Coast-Site Website",

    # The model admin to search from the search bar, search bar omitted if excluded
    "search_model": "auth.User",

    # Field name on user model that contains avatar image
    "user_avatar": None,

    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    # "order_with_respect_to": ["accounts", "auth", "home", "product", ]
    # 
    
    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": ["accounts", "auth", "home"],
    
    ############
    # Top Menu #
    ############

    # Links to put along the top menu

    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free
    # for a list of icon classes
    "icons": {
        "auth.Group": "fas fa-users",
        "accounts.User" : "fas fa-user",
        "home.HomePageContent": "fas fa-home",
        "home.HomePageNewsLetter": "fas fa-id-card",
        "company.CompanyPage": "fas fa-address-book",
        # "order.Order": "fas fa-cart-arrow-down",
        # "order.Order": "fas-solid fa-cart-circle-check",
        
        "contact.Contact" : "fas fa-book",
        "contact.ContactUs" : "fas fa-id-card-alt",
        
        # "blog.BlogType" : "fas fa-edit",
        # "blog.Blog" : "fas fa-check",
        # "blog.BlogPageHeading" : "fas fa-heading",
        
        # "product.Attribute": "fab fa-app-store",
        # "product.Box": "fas fa-box",
        # "product.CouponCode": "fas fa-gift",
        # "product.GrandCategory": "fas fa-list",
        # "product.ParentCategory": "fas fa-th-large",
        
        # "product.Product": "fab fa-product-hunt",
        # "product.SAttribute": "fas fa-arrow-right",   

        "mission.MissionPage": "fas fa-list-alt",
        # "menu.MenuProduct": "fas fa-chart-bar",

        "services.ServicesPageBanner": "fas fa-calendar",
        "ourclient.ClientPageBanner": "fas fa-user-tie",

        # "services.FlowerDecorPageBanner": "fas fa-compact-disc",
        # "services.FlowerDecorContact": "fas fa-address-card",

         
        
        
        
    },
}

# core-origins

CSRF_TRUSTED_ORIGINS = [
    'https://parkcoastholdings.com'
]

CORS_ALLOWED_ORIGINS = [
    'https://parkcoastholdings.com'
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# --messages 
MESSAGE_TAGS = {
    messages.ERROR:'danger'
}
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'


EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'parkcoastholdings@gmail.com'
#  
EMAIL_HOST_PASSWORD = 'fzdbmtaqdyvurazj'
EMAIL_USE_TLS = True
FROM_EMAIL = 'parkcoastholdings@gmail.com'
